<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.zju.ccnt</groupId>
	<artifactId>Login_ssm_mav</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>Login_ssm_mav</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- spring版本号 -->
		<spring.version>3.2.4.RELEASE</spring.version>
		<!-- mybatis版本号 -->
		<mybatis.version>3.2.4</mybatis.version>
		<!-- log4j日志文件管理包版本 -->
		<slf4j.version>1.6.6</slf4j.version>
		<log4j.version>1.2.12</log4j.version>
	</properties>

   
	<dependencies>
		<!-- <dependency>
			<groupId>org.apache.tomcat.maven</groupId>
			<artifactId>tomcat7-maven-plugin</artifactId>
			<version>2.2</version>
		</dependency> --> <!-- 哎呀，弄了好久一直报java.lang.ClassCastException: org.springframework.web.filter.CharacterEncodingFilter cannot be cast to javax.servlet.Filter
		错误，之前一直以为是servlet-api这个冲突的问题，原来是 两次加入了tomcat7-maven-plugin这个配置，唉，整了好久-->
		<!-- <dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			scope=compile 的情况（默认compile），也就是说这个项目在编译、测试，运行阶段都需要这个artifact对应的jar包在classpath中
			scope=provided ，则可以认为这个provided是目标容器已经provided这个artifact,它只影响到编译、测试阶段，运行阶段，假定目标容器已经提供了这个jar包
			<scope>provided</scope>
		</dependency> -->
		<dependency>   
            <groupId>javax.servlet</groupId>   
            <artifactId>servlet-api</artifactId>   
            <version>2.5</version>   
            <scope>provided</scope>   
        </dependency>  
        <!-- <dependency>   
            <groupId>jsaper.servlet</groupId>   
            <artifactId>jasper</artifactId>   
            <version>6.0.33</version>   
            <scope>provided</scope>   
        </dependency>   -->
       
		<!-- 导入dbcp的jar包，用来在applicationContext.xml中配置数据库 -->
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.2.2</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8</version>
			<scope>test</scope>
		</dependency>
		<!-- 上传组件包 -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.1</version>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>

		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.9</version>
		</dependency>
		<!-- 文件编码 -->
		<dependency>
		<groupId>sun.mis</groupId>
		<artifactId>BASE64Encoder</artifactId>
		<version>1.0</version>
		</dependency>
		<!-- 文件解码 -->
		<dependency>
		<groupId>sun.mis</groupId>
		<artifactId>BASE64Decoder</artifactId>
		<version>1.0</version>
		</dependency>
		
		<!-- json依赖的jar包 -->
		<dependency>
		<groupId>net.sf.json</groupId>
		<artifactId>json-lib</artifactId>
		<version>2.2.2</version>
		</dependency>
		
		<dependency>
		<groupId>commons-beanutils</groupId>
		<artifactId>common-beanu</artifactId>
		<version>1.0</version>
		</dependency>
		<dependency>
		<groupId>commons-collections</groupId>
		<artifactId>commons-collections</artifactId>
		<version>3.2.1</version>
		</dependency>
		<dependency>
		<groupId>commons-logging</groupId>
		<artifactId>commons-logging</artifactId>
		<version>1.1.1</version>
		</dependency>
		<dependency>
		<groupId>commons-lang</groupId>
		<artifactId>commons-lang</artifactId>
		<version>2.1</version>
		</dependency>
		<dependency>
		<groupId>ezmorph</groupId>
		<artifactId>ezmorph</artifactId>
		<version>1.0.6</version>
		</dependency>
		
		
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>jsr250-api</artifactId>
			<version>1.0</version>
			<scope>provided</scope>
		</dependency>
		<!-- 映入JSON -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.13</version>
		</dependency>

		<!-- 格式化对象，方便输出日志 -->
		<!-- <dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.1.41</version>
		</dependency> -->
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.0</version>
			<scope>provided</scope>
		</dependency>
		<!-- spring 核心包 -->
		<!-- springframe start -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- <dependency> <groupId>org.springframework</groupId> <artifactId>spring-content-support</artifactId> 
			<version>${spring.version}</version> </dependency> -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- springframe end -->

		<!-- mybatis核心包 -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>${mybatis.version}</version>
		</dependency>

		<dependency>
			<groupId>org.mybatis.generator</groupId>
			<artifactId>mybatis-generator-core</artifactId>
			<version>1.3.2</version>
		</dependency>

		<!-- mybatis/spring包 -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>1.2.2</version>
		</dependency>

		<!--oracle驱动包 -->
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>ojdbc6</artifactId>
			<version>11.2.0.1.0</version>
		</dependency>

		<!-- 数据源包 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>1.0.2</version>
		</dependency>

		<!-- json数据 -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.13</version>
		</dependency>

		<!-- 日志文件管理包 -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<!-- log end -->
	</dependencies>
	<!-- 定制打包后的包名 -->
	<build>
		<finalName>springmvc</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<!-- <groupId>org.codehaus.mojo</groupId> -->
				<artifactId>tomcat6-maven-plugin</artifactId>
				<version>2.0-SNAPSHOT</version>
				<configuration>  <!-- apache 官方tomcat插件，支持deploy url地址为http://localhost:8080/manager/html -->
					<!-- 第三方tomcat插件,支持redeploy url地址为http://localhost:8080/manager -->
					<url>http://localhost:8080/manager/html</url><!-- url属性为tomcat的manager页地址 -->
					<server>tomcat6</server> <!-- server属性的值与settings.xml文件中配置的server的id一致 -->
					<username>admin</username> <!-- path为发布的应用的名称 -->
					<password>admin</password>
					<port>9988</port>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.3-SNAPSHOT</version>
				<configuration>
					<url>http://127.0.0.1:8080/manager/text</url>
					<server>tomcat7</server>
					<username>admin</username>
					<password>admin</password>
					<path>E:\workspace\Login_ssm_mav</path>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.12.4</version>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<!-- 在project节点下，在插件仓库（plugin repositories）和普通仓库（repositories）中添加以下仓库到pom.xml -->
	<!-- 保证maven可以从仓库中下载到tomcat-maven-plugin插件，少添加了这段信息，会出现如下报错信息： No plugin 
		found for prefix 'tomcat' in the current project and in the plug -->
	<repositories>
		<repository>
			<id>people.apache.snapshots</id>
			<url> 
        http://repository.apache.org/content/groups/snapshots-group/ 
    </url>
			<!-- 表示可以从这个仓库下载releases版本的构件 -->
			<releases>
				<enabled>false</enabled>
			</releases>
			<!-- 表示可以从这个仓库下载snapshot版本的构件 -->
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>apache.snapshots</id>
			<name>Apache Snapshots</name>
			<url> 
        http://repository.apache.org/content/groups/snapshots-group/ 
    </url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

</project>
